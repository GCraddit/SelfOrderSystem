// <auto-generated />
using System;
using Giles_Chen_test_1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Giles_Chen_test_1.Migrations
{
    [DbContext(typeof(CafeContext))]
    [Migration("20241027044805_UpdateMemberColumns")]
    partial class UpdateMemberColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Giles_Chen_test_1.Foodandbev", b =>
                {
                    b.Property<int>("FoodandbevID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.Property<string>("foodandbevDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FoodandbevDescription");

                    b.Property<string>("foodandbevImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FoodandbevImagePath");

                    b.Property<string>("foodandbevName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FoodandbevName");

                    b.Property<decimal>("foodandbevPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("FoodandbevPrice");

                    b.HasKey("FoodandbevID");

                    b.ToTable("Foodandbevs");
                });

            modelBuilder.Entity("Giles_Chen_test_1.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MemberId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone");

                    b.Property<int>("Point")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Point");

                    b.HasKey("MemberId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Giles_Chen_test_1.Merch", b =>
                {
                    b.Property<int>("MerchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("merchID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MerchID"));

                    b.Property<string>("MerchDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("merchDescription");

                    b.Property<string>("MerchImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("merchImagePath");

                    b.Property<string>("MerchName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("merchName");

                    b.Property<int>("MerchPoints")
                        .HasColumnType("int")
                        .HasColumnName("merchPoints");

                    b.HasKey("MerchID");

                    b.ToTable("Merches", (string)null);
                });

            modelBuilder.Entity("Giles_Chen_test_1.Order", b =>
                {
                    b.Property<Guid>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Giles_Chen_test_1.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FoodandbevID")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemID");

                    b.HasIndex("FoodandbevID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Giles_Chen_test_1.Staff", b =>
                {
                    b.Property<int>("staffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("staffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staffID"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.HasKey("staffID");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("Giles_Chen_test_1.OrderItem", b =>
                {
                    b.HasOne("Giles_Chen_test_1.Foodandbev", "Foodandbev")
                        .WithMany()
                        .HasForeignKey("FoodandbevID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Giles_Chen_test_1.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Foodandbev");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Giles_Chen_test_1.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
